#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# For more information about the used API and data refer to: https://support.hpe.com/hpesc/public/docDisplay?docId=c03606339

from collections.abc import Mapping

from cmk.base.plugins.agent_based.threepar_ports import ThreeParPortsSection

factory_settings["threepar_ports_default_levels"] = {
    "1_link": 1,
    "2_link": 1,
    "3_link": 1,
    "4_link": 0,
    "5_link": 2,
    "6_link": 2,
    "7_link": 1,
    "8_link": 0,
    "9_link": 1,
    "10_link": 1,
    "11_link": 1,
    "12_link": 1,
    "13_link": 1,
    "14_link": 1,
    "1_fail": 0,
    "2_fail": 2,
    "3_fail": 2,
    "4_fail": 2,
    "5_fail": 2,
    "6_fail": 2,
    "7_fail": 1,
}


def discover_3par_ports(section: ThreeParPortsSection):
    for port in section.values():
        # Only create an item if not "FREE" (type = 3)
        if port.type != 3:
            yield (port.name, {})


def check_3par_ports(
    item: str,
    params: Mapping[str, int],
    section: ThreeParPortsSection,
):

    if (port := section.get(item)) is None:
        return

    if port.label:
        yield 0, f"Label: {port.label}"

    if port.state:
        yield params.get(f"{port.state}_link"), port.translated_state

    if port.portWWN:
        yield 0, f"portWWN: {port.portWWN}"

    if port.mode:
        yield 0, f"Mode: {port.translated_mode}"

    if port.failoverState:
        yield params.get(f"{port.failoverState}_fail"), f"Failover: {port.translated_failover}"


check_info["3par_ports"] = {
    # Section already migrated!
    "inventory_function": discover_3par_ports,
    "check_function": check_3par_ports,
    "service_description": "Port %s",
    "default_levels_variable": "threepar_ports_default_levels",
    "group": "threepar_ports",
}
