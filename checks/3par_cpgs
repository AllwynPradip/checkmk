#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
from collections.abc import Mapping
from typing import Any

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.df import *  # pylint: disable=wildcard-import,unused-wildcard-import
from cmk.base.plugins.agent_based.threepar_cpgs import count_threepar_vvs, ThreeparCPGSection

factory_settings["filesystem_default_levels"] = FILESYSTEM_DEFAULT_PARAMS


def discover_3par_cpgs_usage(section: ThreeparCPGSection):
    for cpg in section.values():
        if count_threepar_vvs(cpg) > 0:
            for fs in [
                "SAUsage",
                "SDUsage",
                "UsrUsage",
            ]:
                yield (f"{cpg.name} {fs}", {})


def check_3par_cpgs_usage(item: str, params: Mapping[str, Any], section: ThreeparCPGSection):

    for cpg in section.values():

        if f"{cpg.name} SAUsage" == item:
            yield df_check_filesystem_single(
                mountpoint=item,
                size_mb=cpg.sa_usage.totalMiB,
                avail_mb=cpg.sa_usage.freeMiB,
                reserved_mb=0,
                inodes_total=0,
                inodes_avail=0,
                params=params,
            )

        if f"{cpg.name} SDUsage" == item:
            yield df_check_filesystem_single(
                mountpoint=item,
                size_mb=cpg.sd_usage.totalMiB,
                avail_mb=cpg.sd_usage.freeMiB,
                reserved_mb=0,
                inodes_total=0,
                inodes_avail=0,
                params=params,
            )

        if f"{cpg.name} UsrUsage" == item:
            yield df_check_filesystem_single(
                mountpoint=item,
                size_mb=cpg.usr_usage.totalMiB,
                avail_mb=cpg.usr_usage.freeMiB,
                reserved_mb=0,
                inodes_total=0,
                inodes_avail=0,
                params=params,
            )


check_info["3par_cpgs.usage"] = {
    "inventory_function": discover_3par_cpgs_usage,
    "check_function": check_3par_cpgs_usage,
    "service_description": "CPG %s",
    "has_perfdata": True,
    "group": "threepar_cpgs",
    "default_levels_variable": "filesystem_default_levels",
}
