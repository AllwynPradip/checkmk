#!/usr/bin/env python3
# Copyright (C) 2019 Checkmk GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


from cmk.base.check_api import (
    check_levels,
    discover,
    get_parsed_item_data,
    get_percent_human_readable,
    OID_END,
)
from cmk.base.check_legacy_includes.huawei_switch import (
    huawei_entity_specific_snmp_info,
    parse_huawei_physical_entity_values,
)
from cmk.base.config import check_info, factory_settings
from cmk.base.plugins.agent_based.agent_based_api.v1 import OIDEnd, SNMPTree
from cmk.base.plugins.agent_based.utils.huawei import DETECT_HUAWEI_SWITCH

factory_settings["huawei_switch_mem_default_levels"] = {
    "levels": (80.0, 90.0),
}


def parse_huawei_switch_mem(info):
    return parse_huawei_physical_entity_values(info)


@get_parsed_item_data
def check_huawei_switch_mem(item, params, item_data):
    try:
        mem = float(item_data.value)
    except TypeError:
        return None
    return check_levels(
        mem,
        "mem_used_percent",
        params.get("levels", (None, None)),
        infoname="Usage",
        human_readable_func=get_percent_human_readable,
    )


check_info["huawei_switch_mem"] = {
    "detect": DETECT_HUAWEI_SWITCH,
    "parse_function": parse_huawei_switch_mem,
    "inventory_function": discover(),
    "check_function": check_huawei_switch_mem,
    "service_description": "Memory %s",
    "fetch": [
        SNMPTree(
            base=".1.3.6.1.2.1.47.1.1.1.1",
            oids=[OIDEnd(), "7"],
        ),
        SNMPTree(
            base=".1.3.6.1.4.1.2011.5.25.31.1.1.1.1",
            oids=[OIDEnd(), "7"],
        ),
    ],
    "snmp_info": huawei_entity_specific_snmp_info(
        (
            ".1.3.6.1.4.1.2011.5.25.31.1.1.1.1",
            [OID_END, "7"],
        )
    ),
    "group": "memory_percentage_used_multiitem",
    "default_levels_variable": "huawei_switch_mem_default_levels",
}
