#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


# autogenerated, might not even be needed:
# mypy: disable-error-code="var-annotated,name-defined,arg-type,no-untyped-def,list-item,index,attr-defined,operator,assignment"

from cmk.base.check_legacy_includes.df import df_check_filesystem_list, FILESYSTEM_DEFAULT_PARAMS
from cmk.base.check_legacy_includes.scaleio import get_scaleio_data, parse_scaleio
from cmk.base.config import check_info, factory_settings

# <<<scaleio_system:sep(9)>>>
# SYSTEM 5914d6b47d479d5a:
#        ID                                                 5914d6b47d479d5a
#        NAME                                               N/A
#        CAPACITY_ALERT_HIGH_THRESHOLD                      80%
#        CAPACITY_ALERT_CRITICAL_THRESHOLD                  90%
#        MAX_CAPACITY_IN_KB                                 65.5 TB (67059 GB)
#        UNUSED_CAPACITY_IN_KB                              17.2 TB (17635 GB)
#
factory_settings["filesystem_default_levels"] = FILESYSTEM_DEFAULT_PARAMS


def inventory_scaleio_system(parsed):
    for entry in parsed:
        yield entry, {}


def check_scaleio_system(item, params, parsed):
    data = get_scaleio_data(item, parsed)
    if not data:
        return

    if "levels" not in params:
        params["levels"] = (
            float(data["CAPACITY_ALERT_HIGH_THRESHOLD"][0].strip("%")),
            float(data["CAPACITY_ALERT_CRITICAL_THRESHOLD"][0].strip("%")),
        )
    total = int(data["MAX_CAPACITY_IN_KB"][2].strip("(")) * 1024
    free = int(data["UNUSED_CAPACITY_IN_KB"][2].strip("(")) * 1024

    yield df_check_filesystem_list(item, params, [(item, total, free, 0)])


check_info["scaleio_system"] = {
    "parse_function": lambda info: parse_scaleio(info, "SYSTEM"),
    "inventory_function": inventory_scaleio_system,
    "check_function": check_scaleio_system,
    "service_description": "ScaleIO System %s",
    "group": "filesystem",
    "default_levels_variable": "filesystem_default_levels",
}
