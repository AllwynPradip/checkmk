#!/usr/bin/env python3
# Copyright (C) 2019 Checkmk GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from collections.abc import Iterable, Mapping
from typing import NamedTuple

from cmk.base.check_legacy_includes.temperature import check_temperature
from cmk.base.config import check_info
from cmk.base.plugins.agent_based.agent_based_api.v1.type_defs import StringTable
from cmk.base.plugins.agent_based.utils.kentix import DETECT_KENTIX
from cmk.base.plugins.agent_based.utils.temperature import TempParamType


class Sensor(NamedTuple):
    reading: float
    dev_levels: tuple[float, float]
    dev_levels_lower: tuple[float, float]


Section = Mapping[str, Sensor]


def parse_kentix_temp(string_table: StringTable) -> Section:
    section = {}
    for oid_value, lower_warn, upper_warn, _alarm, _text in string_table:
        type_, _one, _one, value = oid_value.split(".", 3)
        item = "LAN" if type_ == "2" else "Rack"
        section[item] = Sensor(
            reading=float(value) / 10,
            dev_levels=(float(upper_warn), float(upper_warn)),
            dev_levels_lower=(float(lower_warn), float(lower_warn)),
        )
    return section


def inventory_kentix_temp(section: Section) -> Iterable[tuple[str, dict]]:
    yield from ((item, {}) for item in section)


def check_kentix_temp(
    item: str, params: TempParamType, section: Section
) -> Iterable[tuple[int, str, list]]:
    if (sensor := section.get(item)) is None:
        return

    yield check_temperature(
        sensor.reading,
        params,
        "kentix_temp_%s" % item,
        dev_levels=sensor.dev_levels,
        dev_levels_lower=sensor.dev_levels_lower,
    )


check_info["kentix_temp"] = {
    "detect": DETECT_KENTIX,
    "check_function": check_kentix_temp,
    "inventory_function": inventory_kentix_temp,
    "service_description": "Temperature %s",
    "snmp_info": (
        ".1.3.6.1.4.1.37954",
        ["2.1.1", "3.1.1"],
        [
            "1",  # temperatureValue
            "2",  # temperatureMin
            "3",  # temperatureMax
            "4",  # temperatureAlarm, not used here
            "5",  # temperatureAlarmtext
        ],
    ),
    "group": "temperature",
}
