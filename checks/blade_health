#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


# Example excerpt from SNMP data:
# .1.3.6.1.4.1.2.3.51.2.2.7.1.0  255
# .1.3.6.1.4.1.2.3.51.2.2.7.2.1.1.1  1
# .1.3.6.1.4.1.2.3.51.2.2.7.2.1.2.1  "Good"
# .1.3.6.1.4.1.2.3.51.2.2.7.2.1.3.1  "No critical or warning events"
# .1.3.6.1.4.1.2.3.51.2.2.7.2.1.4.1  "No timestamp"


# autogenerated, might not even be needed:
# mypy: disable-error-code="var-annotated,name-defined,arg-type,no-untyped-def,list-item,index,attr-defined,operator,assignment"

from cmk.base.check_api import any_of, contains
from cmk.base.config import check_info


def inventory_blade_health(info):
    if len(info) == 1:
        return [(None, None)]
    return []


def check_blade_health(_no_item, _no_params, info):
    state = info[0][0]
    descr = ": " + ", ".join([line[1] for line in info if len(line) > 1])

    if state == "255":
        return (0, "State is good")
    if state == "2":
        return (1, "State is degraded (non critical)" + descr)
    if state == "4":
        return (1, "State is degraded (system level)" + descr)
    if state == "0":
        return (2, "State is critical!" + descr)
    return (3, "Undefined state code %s%s" % (state, descr))


check_info["blade_health"] = {
    "detect": any_of(
        contains(".1.3.6.1.2.1.1.1.0", "BladeCenter Management Module"),
        contains(".1.3.6.1.2.1.1.1.0", "BladeCenter Advanced Management Module"),
        contains(".1.3.6.1.2.1.1.1.0", "IBM Flex Chassis Management Module"),
        contains(".1.3.6.1.2.1.1.1.0", "Lenovo Flex Chassis Management Module"),
    ),
    "check_function": check_blade_health,
    "inventory_function": inventory_blade_health,
    "service_description": "Summary health state",
    "snmp_info": (".1.3.6.1.4.1.2.3.51.2.2.7", ["1.0", "2.1.3.1"]),
}
