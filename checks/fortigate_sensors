#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


from collections.abc import Iterable
from typing import NamedTuple

from cmk.base.check_api import any_of, equals
from cmk.base.config import check_info
from cmk.base.plugins.agent_based.agent_based_api.v1.type_defs import StringTable


class FortigateSensors(NamedTuple):
    total: int
    critical_sensors: tuple[str, ...]

    @property
    def critical(self) -> int:
        return len(self.critical_sensors)

    @property
    def ok(self) -> int:
        return self.total - self.critical


def parse_fortigate_sensors(string_table: StringTable) -> FortigateSensors:
    # We assume that sensors with value "0" are not connected and may be ignored.
    # The related MIB includes no other hint for that.
    return FortigateSensors(
        total=sum(value != "0" or status != "0" for _name, value, status in string_table),
        critical_sensors=tuple(name for name, value, status in string_table if status == "1"),
    )


def discover_fortigate_sensors(section: FortigateSensors) -> Iterable[tuple[None, dict]]:
    if section.total >= 1:
        yield None, {}


def check_fortigate_sensors(section: FortigateSensors) -> Iterable[tuple[int, str]]:
    if section.total == 0:
        yield 2, "No sensors found"
        return

    yield 0, f"{section.total} sensors"
    yield 0, f"{section.ok} OK"
    yield 0, f"{section.critical} with alarm"

    for sensor in section.critical_sensors:
        yield 2, f"{sensor}"


check_info["fortigate_sensors"] = {
    "detect": any_of(
        equals(".1.3.6.1.2.1.1.2.0", ".1.3.6.1.4.1.12356.101.1.1000"),
        equals(".1.3.6.1.2.1.1.2.0", ".1.3.6.1.4.1.12356.101.1.5004"),
        equals(".1.3.6.1.2.1.1.2.0", ".1.3.6.1.4.1.12356.101.1.5006"),
        equals(".1.3.6.1.2.1.1.2.0", ".1.3.6.1.4.1.12356.101.1.10004"),
    ),
    "snmp_info": (
        ".1.3.6.1.4.1.12356.101.4.3.2.1",
        [
            "2",  # FORTINET-FORTIGATE-MIB::fgHwSensorEntName
            "3",  # FORTINET-FORTIGATE-MIB::fgHwSensorEntValue
            "4",  # FORTINET-FORTIGATE-MIB::fgHwSensorEntAlarmStatus
        ],
    ),
    "parse_function": parse_fortigate_sensors,
    "inventory_function": discover_fortigate_sensors,
    "check_function": check_fortigate_sensors,
    "service_description": "Sensor Summary",
}
