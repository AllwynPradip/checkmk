#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from collections.abc import Mapping
from dataclasses import dataclass

from cmk.base.api.agent_based.type_defs import StringTable
from cmk.base.plugins.agent_based.utils.threepar import parse_3par


@dataclass
class ThreeParHost:
    name: str
    id: int | str
    os: str | None
    fc_paths_number: int
    iscsi_paths_number: int


ThreeParHostsSection = Mapping[str, ThreeParHost]


def parse_3par_hosts(string_table: StringTable) -> ThreeParHostsSection:

    return {
        host.get("name"): ThreeParHost(
            name=host.get("name"),
            id=host.get("id"),
            os=host.get("descriptors", {}).get("os"),
            fc_paths_number=len(host.get("FCPaths", [])),
            iscsi_paths_number=len(host.get("iSCSIPaths", [])),
        )
        for host in parse_3par(string_table).get("members", {})
        if host.get("name") is not None
    }


def inventory_3par_hosts(section: ThreeParHostsSection):
    for host in section:
        yield (host, None)


def check_3par_hosts(
    item: str,
    _no_params,
    section: ThreeParHostsSection,
):

    if (host := section.get(item)) is None:
        return

    yield 0, f"ID: {host.id}"

    if host.os:
        yield 0, f"OS: {host.os}"

    if host.fc_paths_number:
        yield 0, f"FC Paths: {host.fc_paths_number}"
    elif host.iscsi_paths_number:
        yield 0, f"iSCSI Paths: {host.iscsi_paths_number}"


check_info["3par_hosts"] = {
    "parse_function": parse_3par_hosts,
    "inventory_function": inventory_3par_hosts,
    "check_function": check_3par_hosts,
    "service_description": "Host %s",
}
