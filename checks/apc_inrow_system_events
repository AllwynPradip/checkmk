#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from typing import Iterable, Mapping, TypedDict

from cmk.base.plugins.agent_based.agent_based_api.v1.type_defs import StringTable

DiscoveryResult = Iterable[tuple]
CheckResult = Iterable[tuple]

# .1.3.6.1.4.1.318.1.1.13.3.1.2.1.3.1 Power Source B Failure
# .1.3.6.1.4.1.318.1.1.13.3.1.2.1.3.2 Fan Power Supply Right Fault


class Section(TypedDict, total=True):
    events: tuple[str, ...]


def parse_apc_inrow_system_events(string_table: StringTable) -> Section:
    return {"events": tuple(first_word for first_word, *_rest in string_table)}


def discover_apc_inrow_system_events(section: Section) -> DiscoveryResult:
    yield None, {}


def check_apc_inrow_system_events(
    _no_item: None, params: Mapping[str, int], section: Section
) -> CheckResult:
    if events := section["events"]:
        yield from ((params.get("state", 2), event) for event in events)
        return

    yield 0, "No service events"


check_info["apc_inrow_system_events"] = {
    "parse_function": parse_apc_inrow_system_events,
    "inventory_function": discover_apc_inrow_system_events,
    "check_function": check_apc_inrow_system_events,
    "service_description": "System events",
    "snmp_info": (".1.3.6.1.4.1.318.1.1.13.3.1.2.1", ["3"]),  # airIRAlarmDescription
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.318.1.3"),
    "group": "apc_system_events",
    "handle_empty_info": True,
}
