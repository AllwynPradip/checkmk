load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")
load("@omd_packages//packages/Python:Python_http.bzl", "python_version")
load("@omd_packages//packages/Python:Python_http.bzl", "python_version_major")
load("@omd_packages//packages/Python:Python_http.bzl", "python_major_minor")
load("@omd_packages//packages/Python:Python_http.bzl", "python_major_dot_minor")

package(default_visibility=["//visibility:public"])

filegroup(
    name="all_srcs",
    srcs=glob(
        include=["**/*"],
        exclude=["*.bazel"],
    ),
)

#
# This should be put somewhere toplevel, also avoiding the deprecated
# --define syntax, see
# https://bazel.build/docs/configurable-attributes
#
config_setting(
    name="no_own_openssl",
    values={"define": "no-own-openssl=true"},
)

configure_make(
    name="python",
    lib_source=":all_srcs",

    configure_command="configure",
    configure_in_place=True,

    # We need to build our own OpenSSL because older distribution, that we still
    # have to support are not able to build Python 3.8+ (See CMK-3477).
    #
    # CFLAGS='-Dredacted=\"redacted\"' is necessary to fix compilation error

    configure_options=select({
            ":no_own_openssl": [],
            "//conditions:default": [
                "--with-openssl=$EXT_BUILD_DEPS/openssl",
                "--with-openssl-rpath=auto",
            ],
    }) + [
        "CFLAGS='-Dredacted=\"redacted\"'",
        "--enable-optimizations",
        "--enable-shared",
        "--with-lto",
        "DESTDIR=py_install",
    ],

    deps=select(
        {
            ":no_own_openssl": [],
            "//conditions:default": ["@openssl"],

        }
    ),

    # NOTE: -j1 seems to be necessary when --enable-optimizations is used
    args=["-j1"],

    # rules_foreign_cc defaults the install_prefix to "python". This conflicts with the "python" executable that is generated.
    install_prefix="py_install",

    out_binaries=[
        "python" + python_major_dot_minor,
        "pip" + python_version_major,
        "pip" + python_major_dot_minor,
        "2to3-" + python_major_dot_minor,
        "idle" + python_major_dot_minor,
        "pydoc" + python_major_dot_minor,
        "python" + python_major_dot_minor + "-config",
    ],

    out_data_dirs=["lib", "share"],

    data=[
        "@omd_packages//packages/Python:sitecustomize.py",
        "@omd_packages//packages/Python:pip",
    ],

    env={
        "python_major_dot_minor": python_major_dot_minor,
        "python_version_major": python_version_major,
    },
    postfix_script="""
	        ### Fix pip3 configuration by using own wrapper script ###
            # * PIP_TARGET currently has an issue when installing non-wheel packages, see https://github.com/pypa/pip/issues/8438
            # * The workaround is to set the target via the commandline
            # * The wrapper script we're using is based on what PipScriptMaker would create, see:
            # https://github.com/pypa/pip/blob/83c800d3b8b367b6ae1fbf92fd4f699612cecfc7/src/pip/_internal/operations/install/wheel.py#L422
            # * However, we may run into issues in the future again. It seems actually the module invocation (python -m pip) is more solid, see:
            # https://github.com/pypa/pip/issues/5599
            install -m 755 --no-target-directory $EXT_BUILD_ROOT/packages/Python/pip $INSTALLDIR/bin/pip${python_version_major}
            install -m 755 --no-target-directory $EXT_BUILD_ROOT/packages/Python/pip $INSTALLDIR/bin/pip${python_major_dot_minor}
            echo '### Compile and install sitecustomize.py ###'
            install -m 644 $EXT_BUILD_ROOT/packages/Python/sitecustomize.py $INSTALLDIR/lib/python${python_major_dot_minor}
            LD_LIBRARY_PATH=py_install/lib py_install/bin/python3 -m py_compile $INSTALLDIR/lib/python${python_major_dot_minor}/sitecustomize.py
            echo '### Fix sysconfigdata ###'
            echo '##### For now 'OMD_VERSION' is not yet available in Bazel, therefore we use '/replace-me' #####'
            cp $INSTALLDIR/lib/python${python_major_dot_minor}/_sysconfigdata__linux_x86_64-linux-gnu.py $INSTALLDIR/lib/python${python_major_dot_minor}/_sysconfigdata__linux_x86_64-linux-gnu.py_orig
            sed -i 's|-rpath=/.*/lib|-rpath=/replace-me/lib|g' $INSTALLDIR/lib/python${python_major_dot_minor}/_sysconfigdata__linux_x86_64-linux-gnu.py
            sed -i 's|/[a-z0-9_\\./\\-]\\+/py_install|/replace-me|g' $INSTALLDIR/lib/python${python_major_dot_minor}/_sysconfigdata__linux_x86_64-linux-gnu.py
            echo '#############################################################'
            """
)
